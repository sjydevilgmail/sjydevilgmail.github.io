[
  {
    "index": 1,
    "video_id": "dpJ7-hhja1Q",
    "title": "1인개발자를 위한 AI 코딩 작업순서 3단계",
    "url": "https://www.youtube.com/watch?v=dpJ7-hhja1Q&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=1&pp=iAQB",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\dpJ7-hhja1Q.txt",
    "subtitle_path_srt": "output_results\\subtitles\\dpJ7-hhja1Q.srt",
    "summary": "이 비디오에서는 한국인들이 AI로 코딩할 때 효율성을 높이기 위한 방법으로 라이언 칼슨의 '3-file 시스템'을 소개합니다. 이 시스템은 AI에게 작업을 명확하게 지시하기 위해 세 가지 규칙 파일을 사용하는 것으로 구성되며, 첫 번째는 제품 요구사항 문서(prd)를 작성하여 AI가 혼란에 빠지지 않도록 하고, 두 번째는 prd를 기반으로 작업 목록을 생성하게 하며, 세 번째는 AI가 작업을 단계별로 수행하도록 지시합니다. 이러한 방식은 AI의 혼자서 진행하는 것을 방지하고, 사용자와의 상호작용을 통해 더욱 효율적인 코딩을 가능하게 합니다. 또한, 비디오에서는 AI 작업 중 사용자가 다른 일을 할 수 있도록 슬랙 메시지 시스템을 활용하는 방법도 제시됩니다. 이를 통해 AI의 작업을 효율적으로 관리하고 시간을 절약할 수 있다는 점을 강조합니다.",
    "keywords": [
      "AI",
      "코딩",
      "효율성",
      "라이언 칼슨",
      "3-file 시스템",
      "prd",
      "테스크",
      "규칙",
      "슬랙",
      "바이브 코딩"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T12:57:02.374633",
    "table_of_contents": "1. **AI 사용 시 효율성 저하 원인**\n   - 한국인들이 AI로 코딩할 때 맥락 설명 없이 바로 질문하고 작업을 시키는 것이 효율성을 떨어뜨린다는 점을 설명합니다.\n\n2. **라이언 칼슨 소개**\n   - 연쇄 창업가 라이언 칼슨의 성공 사례와 그의 주장을 통해 AI 효율성의 핵심이 사용법에 있다는 내용을 소개합니다.\n\n3. **3-file 시스템의 개요**\n   - AI에게 작업을 시킬 때, 규칙과 절차를 설정하는 3-file 시스템의 중요성을 설명합니다.\n\n4. **첫 번째 파일: prd 생성규칙 파일**\n   - Product Requirements Document (prd)의 필요성과 AI가 중간에 잘못 가는 것을 방지하기 위한 규칙 설정 방법을 다룹니다.\n\n5. **두 번째 파일: 테스크 생성규칙 파일**\n   - prd를 바탕으로 AI가 필요한 테스크 목록을 생성하도록 하는 규칙을 소개하며, 마크다운 형식의 체크박스를 활용한 방법을 설명합니다.\n\n6. **세 번째 파일: 테스크 실행규칙 파일**\n   - AI가 한 번에 모든 작업을 하지 않도록 하는 규칙을 설정하여, 단계별 검수를 통해 작업을 진행하는 방법을 다룹니다.\n\n7. **AI 작업의 단계적 접근**\n   - AI 작업을 단계적으로 나누어 효율성을 높이는 방법과 그에 대한 개인적인 경험을 공유합니다.\n\n8. **피곤하지 않게 바이브 코딩하는 팁**\n   - AI가 코딩하는 동안 피로감을 줄이기 위한 슬랙 메시지 시스템의 활용법을 설명하고, MCP를 통한 자동 알림 설정 방법을 소개합니다.\n\n9. **AI와의 효율적인 협업 사례**\n   - 개인적인 경험을 통해 AI와 협업할 때의 에너지 소모를 줄이고 효율을 높이는 방법에 대해 이야기합니다.\n\n10. **결론 및 감사 인사**\n    - 라이언 칼슨의 3-file 시스템과 슬랙 메시지 시스템을 통해 코딩의 효율성을 높이는 방법을 다시 강조하며, 시청자들에게 감사의 인사를 전합니다."
  },
  {
    "index": 2,
    "video_id": "yis4TJP4uQU",
    "title": "바이브 코딩이 아닌 증강 코딩으로 - 1인 창업 개발기 | 크래프톤 정글 6기 정현우님",
    "url": "https://www.youtube.com/watch?v=yis4TJP4uQU&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=2&pp=iAQB",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\yis4TJP4uQU.txt",
    "subtitle_path_srt": "output_results\\subtitles\\yis4TJP4uQU.srt",
    "summary": "정현우는 AI를 활용한 창업 아이템 개발에 대한 경험과 깨달음을 공유하고자 하는데, 그는 기술 면접 준비에서의 불편함을 해결하기 위해 AI 기반의 면접 준비 서비스를 구상하고 있다. 초기에는 바이브 코딩을 통해 빠르게 프로토타입을 제작했으나, 코드 유지보수의 어려움으로 인해 프로젝트를 폐기하고 증강 코딩 방법론을 적용하기로 결심했다. 그는 스펙 주도 개발과 규칙 성장 개발을 통해 AI를 효과적으로 활용하며, 개발 속도를 높이고 코드 품질을 유지하는 방법을 모색하고 있다. 현재 그는 MVP를 거의 완성했으며, 클로즈 베타 테스트를 위해 참여자를 모집하고 있다.",
    "keywords": [
      "AI",
      "창업",
      "기술 면접",
      "바이브 코딩",
      "증강 코딩",
      "스펙 주도 개발",
      "룰 그로잉 디벨로퍼",
      "개발자",
      "코드 퀄리티",
      "페인 포인트"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T12:57:51.612706",
    "table_of_contents": "1. **소개 및 배경**\n   - 크래프턴의 정현우 소개\n   - AI 시대에 맞춘 창업 아이템 개발 의지\n   - 이전 경험과 창업 결심 배경\n\n2. **창업 아이템 결정 과정**\n   - 페인 포인트 찾기\n   - 기술 면접 준비의 문제 제기\n   - AI 기술 면접 서비스 개발 결심\n\n3. **AI 활용 및 개발 접근법**\n   - 개발자 정체성의 변화\n   - 코드 퀄리티보다 동작하는 서비스의 중요성\n   - 바이브 코딩 개념 소개 및 경험\n\n4. **MVP 개발 경험**\n   - MVP 기획에서 배포까지의 과정\n   - 발생한 문제와 한계 (기능 추가 및 디자인 문제)\n   - 바이브 코딩의 한계 인식\n\n5. **증강 코딩 개념**\n   - 증강 코딩의 정의 및 필요성\n   - 스펙 주도 개발과 룰 그로잉 디벨로퍼 프론의 이해\n   - 개발 과정에서의 AI 활용 방법\n\n6. **스펙 주도 개발**\n   - 구체적인 스펙 작성 및 개발 과정\n   - 작은 단위의 테스크 기반 개발\n   - 문서화의 중요성과 툴 활용\n\n7. **룰 그로잉 개발**\n   - 코딩 컨벤션과 규칙 정의\n   - AI 코드 퀄리티 유지 방법\n   - 리뷰 프로세스와 피드백 루프 구축\n\n8. **결론 및 향후 방향**\n   - AI를 통한 개발의 가능성\n   - 개인적인 경험과 배운 점\n   - 지속 가능한 개발을 위한 준비사항\n\n이 목차는 비디오 스크립트의 주요 주제를 체계적으로 정리하고, 각 주제에 대한 간략한 설명을 포함하고 있습니다."
  },
  {
    "index": 3,
    "video_id": "qGod81BacIQ",
    "title": "바이브코딩 필수! PRD 개발 문서 가이드는 이렇게 작성해야 합니다! A to Z 모두 대공개!(with 제미나이)",
    "url": "https://www.youtube.com/watch?v=qGod81BacIQ&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=3&pp=iAQB",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\qGod81BacIQ.txt",
    "subtitle_path_srt": "output_results\\subtitles\\qGod81BacIQ.srt",
    "summary": "이 영상에서는 바이브 코딩을 통해 개발 가이드 문서를 만드는 방법을 소개합니다. 개발 문서 가이드는 AI에게 원하는 기능을 정확히 전달하기 위해 필수적이며, 이를 통해 서비스의 방향성을 명확히 할 수 있습니다. 발표자는 MBTI 서비스를 예로 들어, 서비스의 핵심 개념 정의, 사용자 여정 설계, 시작 화면 구성 등을 AI와 대화하며 단계적으로 가이드북을 작성하는 과정을 보여줍니다. 마지막으로, 작성된 개발 가이드를 바탕으로 실제 웹사이트를 구현하며, UI와 기능이 의도한 대로 잘 반영되었는지를 확인합니다. 이 과정을 통해 시청자들에게 바이브 코딩의 중요성을 강조하고, 그들이 원하는 서비스를 구현할 수 있도록 독려합니다.",
    "keywords": [
      "바이브 코딩",
      "개발 가이드 문서",
      "AI",
      "MBTI 서비스",
      "사용자 경험",
      "PRD 문서",
      "서비스 흐름",
      "질문 및 답변",
      "디자인 구성",
      "핵심 컨셉"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T12:58:04.062553",
    "table_of_contents": "1. **소개**\n   - 영상의 주제와 목적 소개: 바이브 코딩을 위한 개발 가이드 문서 작성 방법\n\n2. **개발 문서 중요성**\n   - AI에게 코딩 요청 시 가이드 문서의 필요성과 중요성 설명\n   - 개발 방향성을 제공하는 역할 강조\n\n3. **개발 가이드북 작성 과정**\n   - MBTI 서비스를 만들기 위한 가이드 문서 작성 방법 설명\n   - 대화식 질문을 통해 가이드 문서 구성\n\n4. **서비스의 핵심 컨셉 정의**\n   - 서비스의 주제를 설정하는 과정: 재미와 소설형 서비스\n   - 사용자 서비스 이용 과정의 흐름 제안\n\n5. **시작 화면 구성**\n   - 시작 화면의 주제, 문구, 디자인 요소 설정\n   - 여행지로 알아보는 나의 숨은 성격에 대한 설정\n\n6. **질문 및 결과 화면 구성**\n   - 서비스의 질문 화면 및 결과 분석 화면 구체화\n   - 로딩 화면 및 최종 결과 화면의 디자인 요소 설정\n\n7. **PRD 문서 작성 요청**\n   - 제품 요구사항 문서(PRD)의 중요성과 구성 요소 설명\n   - 핵심 요구사항 및 공식적인 문서 작성 방법\n\n8. **개발 진행 과정**\n   - 커서에 PRD 문서를 넣고 개발 요청하는 과정 설명\n   - 웹사이트 개발 진행 및 확인 과정\n\n9. **결과 검토**\n   - 최종 결과물의 UI 구성 및 기능 확인\n   - 요구한 디자인 요소와 기능이 제대로 구현되었는지 검토\n\n10. **마무리 및 권장 사항**\n    - 바이브 코딩을 활용한 서비스 구현 방법 요약\n    - 다음 영상 예고 및 구독 요청\n\n이 목차는 비디오의 주요 주제를 체계적으로 정리하여, 각 항목이 어떤 내용을 다루고 있는지를 명확히 합니다."
  },
  {
    "index": 4,
    "video_id": "m1t-M6_6OWE",
    "title": "바이브 코딩의 진짜 현실..(vs 노코드)",
    "url": "https://www.youtube.com/watch?v=m1t-M6_6OWE&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=4&pp=iAQB",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\m1t-M6_6OWE.txt",
    "subtitle_path_srt": "output_results\\subtitles\\m1t-M6_6OWE.srt",
    "summary": "이 비디오 스크립트는 바이브 코딩을 사용하여 간단한 웹 애플리케이션인 뽀모도로 타이머를 개발하는 과정과 그 장단점을 솔직하게 설명하는 내용을 담고 있습니다. 제작자는 바이브 코딩의 빠른 개발 속도와 사용의 용이성을 강조하면서도, 세부 조정의 어려움과 협업 시의 제한점 등을 언급합니다. 이러한 경험을 바탕으로 바이브 코딩이 적합한 상황과 노코드 툴 및 전통적 개발 방식과의 조합 전략을 제안하며, 최종적으로는 모든 도구가 적절한 기대치와 용도로 활용될 때 강력한 도구가 될 수 있다고 결론짓습니다.",
    "keywords": [
      "바이브 코딩",
      "레플릿",
      "뽀모도로",
      "시간 관리",
      "개발 과정",
      "장단점",
      "노코드",
      "협업",
      "비용",
      "프로젝트"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T12:58:24.887469",
    "table_of_contents": "#1. **소개 및 목적**\n   - 바이브 코딩의 최근 인기에 대한 언급\n   - 에어빌드의 레플릿 엠버서더 활동 소개\n   - 솔직한 경험 공유의 중요성 강조\n\n2. **뽀모도로 타이머 프로젝트 개요**\n   - 뽀모도로 기법 설명: 집중과 휴식을 반복하는 시간 관리 방법\n   - 개인적인 경험과 필요성에서 시작된 개발 아이디어\n\n3. **개발 과정**\n   - 초기 프롬프트 설정 및 최지핀티와의 대화\n   - 네페레스 플랫폼에서의 개발 과정 및 기능 추가\n\n4. **바이브 코딩의 장점**\n   - 빠른 초기 완성도: 기본 타이머 기능의 신속한 구현\n   - 간편함: 노코드 툴보다 쉬운 접근성\n   - 자동 디자인: 깔끔한 UI와 애니메이션 제공\n   - 모바일 개발 가능성: 언제 어디서나 개발 가능\n\n5. **바이브 코딩의 단점**\n   - 세부 조정의 어려움: UI 수정 및 버그 수정의 복잡성\n   - 버그의 도미노 현상: 수정 시 발생하는 새로운 문제들\n   - 협업의 어려움: AI 이해의 한계\n   - 비용 문제: 예상보다 높은 비용 발생 가능성\n\n6. **개발 팁**\n   - 프롬프트 구체화의 중요성\n   - 설명 시 고려해야 할 사항\n   - 버그 발생 시 디버깅 방법\n   - 반복 요청 시 접근 방식 변경\n\n7. **바이브 코딩의 추천 사용 상황**\n   - 간단한 업무용 도구 및 뉴틸리티 서비스\n   - MVP 및 프로토타입 제작\n   - 약간의 버그가 허용되는 프로젝트\n\n8. **노코드 툴과 전통적 개발의 추천 사용 상황**\n   - 노코드 툴: 복잡한 비즈니스 앱 및 장기 서비스\n   - 전통적 개발: 대규모 서비스 및 보안이 필요한 서비스\n\n9. **총평 및 향후 전략**\n   - 바이브 코딩의 빠른 결과물과 인내의 필요성\n   - 에어빌드의 하이브리드 전략: 노코드와 바이브 코딩의 조합\n\n10. **마무리 및 추가 정보**\n    - 레플릿을 통한 할인 정보 제공\n    - 구독 및 좋아요 요청, 다음 영상 예고\n\n이 목차는 비디오 스크립트의 주요 주제를 명확하게 정리하여 시청자들이 내용을 쉽게 이해하고 따라갈 수 있도록 돕습니다."
  },
  {
    "index": 5,
    "video_id": "qQbNtKYxk8s",
    "title": "꼭 필요한 ‘입코딩’으로 고퀄 디자인에 데이터 저장까지 되는 웹앱 만드는 법 | 요즘 핫한 바이브 코딩? 이렇게 시작해 보세요.",
    "url": "https://www.youtube.com/watch?v=qQbNtKYxk8s&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=5&pp=iAQB",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\qQbNtKYxk8s.txt",
    "subtitle_path_srt": "output_results\\subtitles\\qQbNtKYxk8s.srt",
    "summary": "이 비디오 스크립트는 AI를 활용하여 비개발자가 앱과 웹 서비스를 만들 수 있는 가능성과 그 구현 과정을 상세히 설명합니다. 첫 번째 부분에서는 '바이브 코딩'을 통해 코딩 지식 없이도 앱이나 웹사이트 개발이 가능하다는 점을 강조하며, 기획의 중요성과 최소 기능 제품(MVP) 검증을 위한 랜딩 페이지 제작의 필요성을 언급합니다. 또한, 통합 개발 환경을 제공하는 다양한 온라인 플랫폼과 AI 에이전트를 활용한 디자인 및 기능 구현 방법을 소개합니다. 이어지는 부분에서는 랜딩 페이지 개발 과정에 대한 구체적인 설명이 포함되어 있으며, 디자인 수정, 이메일 수집 섹션 개발, 카드 UI 제작, 푸터 추가, 구글 앱스 스크립트를 이용한 백엔드 구현, 그리고 최종적인 배포 과정까지 다루고 있습니다. 이 모든 과정은 초보자들이 웹 개발을 쉽게 할 수 있도록 돕는 것을 목표로 하며, 최종적으로 성공적으로 랜딩 페이지를 완성하는 모습을 보여줍니다.",
    "keywords": [
      "키워드 목록:\nAI",
      "코딩",
      "개발",
      "랜딩 페이지",
      "MVP",
      "구글 스프레드시트",
      "프론트엔드",
      "백엔드",
      "통합개발 환경",
      "바이브 코딩"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T12:59:06.081732",
    "table_of_contents": "#1. **애니메이션 효과 및 메시지**\n   - 문구 타이핑 애니메이션과 구독 감사 메시지 설명.\n\n2. **AI를 통한 앱 개발 가능성**\n   - AI의 발전으로 코드 없이 앱 개발이 가능해졌다는 주제.\n\n3. **바이브 코딩 소개**\n   - 바이브 코딩의 개념과 AI와의 대화를 통해 개발하는 방식.\n\n4. **개발 지식의 필요성**\n   - 코딩 지식이 없을 경우의 한계와 어려움 설명.\n\n5. **개발 도구 및 진입장벽**\n   - VS 코드, Node.js 등의 설치와 초기 진입장벽에 대한 논의.\n\n6. **초보자를 위한 온라인 플랫폼**\n   - 윈드서프, 파이어베이스 스튜디오 등 통합 개발 환경 소개.\n\n7. **AI 에이전트를 활용한 앱 개발**\n   - AI 에이전트의 성능과 초보자에게 적합한 플랫폼 추천.\n\n8. **Replit 사용법 및 프로젝트 개요**\n   - Replit을 활용한 랜딩 페이지 디자인 및 개발 과정 안내.\n\n9. **기획의 중요성**\n   - 앱 개발 전 기획 단계의 필요성과 AI의 도움을 통한 기획 방법.\n\n10. **MVP 검증용 랜딩 페이지**\n    - MVP란 무엇인지, 랜딩 페이지의 중요성 및 제작 방법 설명.\n\n11. **프론트엔드와 백엔드 개념 소개**\n    - 프론트엔드, 백엔드, CRUD 개념 및 개발의 복잡성 논의.\n\n12. **랜딩 페이지 기능 스펙 정리**\n    - 랜딩 페이지에서 구현할 기능에 대한 구체적인 스펙 정리.\n\n13. **디자인 단계 및 레퍼런스 활용**\n    - 디자인 구상 및 레퍼런스 수집 방법, AI 활용법 설명.\n\n14. **UI 디자인 생성 및 코드 변환**\n    - 디자인을 AI 도구로 생성하고 코드로 변환하는 방법.\n\n15. **개발 단계 및 프로세스**\n    - 프론트엔드와 백엔드 개발 과정 설명 및 AI 에이전트 활용법.\n\n16. **결론 및 초보자에게 주는 조언**\n    - 초보자들이 개발을 시작할 때의 팁과 조언."
  },
  {
    "index": 6,
    "video_id": "tk1WE_V7snc",
    "title": "바이브 코딩-내가 Cursor.ai를 버리고 Cline으로 간 이유",
    "url": "https://www.youtube.com/watch?v=tk1WE_V7snc&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=6&pp=iAQB",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\tk1WE_V7snc.txt",
    "subtitle_path_srt": "output_results\\subtitles\\tk1WE_V7snc.srt",
    "summary": "비디오에서는 AI 코딩 도구인 커서, 윈드 서프, 클라인에 대한 비교와 각 도구의 장단점에 대해 논의합니다. 커서는 오픈소스 모델을 지원하며 비용 문제와 응답시간의 지연이 단점으로 지적되며, 윈드 서프는 사용 용이성 덕분에 인기가 있지만 비용 한도가 있어 사용에 제약이 있습니다. 클라인은 모델 선택의 자유로움과 오픈소스 지원이 장점으로 언급되며, 사용자들이 각각의 도구를 사용하는 이유와 경험을 공유합니다. 이들은 AI 코딩 도구의 발전 가능성에 대해 논의하며, 팀 관리와 협업의 중요성을 강조합니다.",
    "keywords": [
      "AI",
      "커서",
      "클라이너",
      "윈드 서프",
      "비용",
      "모델",
      "오픈소스",
      "시스템 프롬프트",
      "에이전트",
      "개발자"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T12:59:19.436332",
    "table_of_contents": "#1. **AI 코딩의 개요**\n   - AI 코딩에 대한 기본적인 설명과 현재 사용되고 있는 툴들에 대한 소개.\n\n2. **주요 AI 코딩 툴 비교**\n   - **커서 (Cursor)**\n     - 사용의 용이성과 비용 문제, 오픈소스 모델의 장점과 단점.\n   - **윈드 서프 (Wind Surf)**\n     - 사용의 간편함과 특정 기능, 비용 한계.\n   - **클라인 (Klein)**\n     - 모델 변경의 자유로움과 클라우드 기반의 장점.\n\n3. **사용자 경험과 피드백**\n   - 베이동 님과 양병석 CTO의 사용 경험 공유.\n   - 각 툴의 장단점에 대한 토론.\n\n4. **AI 에이전트와 그 기능**\n   - AI 에이전트의 역할과 각 툴에서의 효용.\n   - 캐스케이드 기능과 AI 에이전트 모드 비교.\n\n5. **비용 및 성능 문제**\n   - 각 툴의 비용 구조와 성능 저하 문제.\n   - 특정 툴 사용시 발생하는 서버 병목 현상.\n\n6. **프롬프트와 시스템 제약**\n   - 시스템 프롬프트의 제약사항과 그로 인한 개발자의 어려움.\n   - 프롬프트 해킹의 가능성과 그 결과.\n\n7. **코딩 도구의 발전 방향**\n   - 개발자를 위한 도구의 필요성과 향후 발전 방향.\n   - 여러 AI 에이전트의 협업 가능성에 대한 논의.\n\n8. **결론 및 향후 계획**\n   - 각 툴의 특성과 향후 개선사항에 대한 정리.\n   - 실험과 프로젝트 계획에 대한 이야기."
  },
  {
    "index": 7,
    "video_id": "4ndOjpo2wS4",
    "title": "클로드 코드 쓴다면 꼭 Super Claude 같이 쓰세요 공짜인데 미쳤습니다...",
    "url": "https://www.youtube.com/watch?v=4ndOjpo2wS4&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=7&pp=iAQB",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\4ndOjpo2wS4.txt",
    "subtitle_path_srt": "output_results\\subtitles\\4ndOjpo2wS4.srt",
    "summary": "이번 영상에서는 클로드코드 관련 프레임워크인 SuperCloD를 소개하며, 이 프레임워크가 제공하는 다양한 커스텀 커멘드를 통해 반복적인 작업을 쉽게 처리할 수 있는 방법을 설명합니다. SuperCloD는 사용자가 입력한 프롬트를 이해하고 자동으로 필요한 작업을 수행할 수 있도록 다양한 기능을 제공하며, 특히 Persona 기능을 통해 개발자가 원하는 역할에 맞춰 작업을 효율적으로 진행할 수 있도록 돕습니다. 영상에서는 실질적인 설치 방법과 함께 Admin 페이지를 디자인하고 데이터베이스와 연동하는 과정을 시연하며, SuperCloD의 활용으로 더 명확하고 완성도 높은 결과물을 얻을 수 있음을 강조합니다.",
    "keywords": [
      "클로드코드",
      "커스텀 커멘드",
      "SuperCloD",
      "프롬트 엔지니어링",
      "Persona",
      "데이터베이스",
      "UI 디자인",
      "Sequential Thinking",
      "MCP",
      "프로젝트"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T12:59:34.840250",
    "table_of_contents": "#1. **인트로 및 주제 소개**\n   - 클로드코드를 사용하는데 있어 커스텀 커멘드를 정리하기 귀찮은 사용자들을 위한 영상임을 소개.\n\n2. **SuperCloD 프레임워크 소개**\n   - SuperCloD의 기능 및 장점 설명.\n   - 일반적인 작업을 커스텀 커멘드로 정리해주는 특징 강조.\n\n3. **커스텀 커멘드 기능 설명**\n   - Implement, Analyze 등 다양한 커스텀 커멘드의 소개.\n   - MCP(최소한의 커스텀 프로세스) 자동 트리거 기능 설명.\n\n4. **Persona의 자동 제공**\n   - 프롬트 엔지니어링의 중요성 및 Persona 제공의 유용성.\n   - 자동으로 선택되는 Persona의 장점 설명.\n\n5. **설치 방법 안내**\n   - SuperCloD 설치 방법 시연.\n   - Python으로 실행하는 과정 설명.\n\n6. **Vibers 프로젝트에 적용하기**\n   - Vibers 프로젝트에서 Admin 페이지 디자인 시연.\n   - 커스텀 프롬트를 활용하여 원하는 작업 수행 방법 설명.\n\n7. **프롬트의 상세 설정**\n   - Persona 및 Sequential Thinking 활성화 방법 설명.\n   - 계획 수립 후 진행 여부 확인 방법 설명.\n\n8. **Admin 페이지 구현**\n   - Admin 페이지가 잘 구현된 예시 시연.\n   - UI 설계 및 데이터 관리 기능에 대한 설명.\n\n9. **서버와의 연동**\n   - 데이터베이스와의 연동을 위한 작업 설명.\n   - 계획 수립 후 서버 연동 작업 진행 시연.\n\n10. **SuperCloD의 추가 기능**\n    - 효율 제어 및 오케스트레이션 기능 설명.\n    - 다양한 페르소나 및 MCP 사용 방법 안내.\n\n11. **결론 및 마무리**\n    - SuperCloD를 활용한 작업의 효율성 및 결과물의 완성도 강조.\n    - 구독 및 좋아요 요청, 다음 영상 예고."
  },
  {
    "index": 8,
    "video_id": "An3jl9mmxw4",
    "title": "DB부터 랭킹 시스템까지, 진짜 서비스처럼 만들어보자!",
    "url": "https://www.youtube.com/watch?v=An3jl9mmxw4&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=8&pp=iAQB",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\An3jl9mmxw4.txt",
    "subtitle_path_srt": "output_results\\subtitles\\An3jl9mmxw4.srt",
    "summary": "이 비디오 스크립트는 SuperBase라는 외부 데이터베이스 관리 서비스를 이용해 To Do List 프로젝트를 설정하고 구현하는 과정을 설명합니다. 사용자는 SuperBase에 가입하고 프로젝트를 생성한 후, AI가 SuperBase를 사용할 수 있도록 설정합니다. 이후 데이터베이스 스키마와 테이블을 생성하고 Next.js와의 연동을 설정합니다. 사용자는 인증 컴포넌트를 구현하고, 할 일 목록을 관리하며, 점수 시스템과 랭킹 기능도 추가합니다. 마지막으로, 사용자들이 경쟁할 수 있는 랭킹 시스템과 개인 타이머 기능을 포함한 완성된 애플리케이션을 소개하며 비디오를 마무리합니다.",
    "keywords": [
      "스프립트에서 추출한 키워드는 다음과 같습니다:\n\n스파베이스",
      "데이터베이스",
      "프로젝트",
      "Access Token",
      "로그인",
      "Next.js",
      "To Do List",
      "API 키",
      "인증",
      "그룹 추가"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T12:59:50.693466",
    "table_of_contents": "#1. **프로젝트 개요 및 목표 설정**\n   - 스크립트 소개와 함께 할 작업의 목표를 설정합니다. SuperBase를 사용하여 데이터베이스를 관리하는 방법을 설명합니다.\n\n2. **SuperBase 가입 및 프로젝트 생성**\n   - SuperBase 사이트에 가입하고 로그인하는 방법을 안내합니다.\n   - 'To Do List'라는 프로젝트를 생성하는 과정 설명.\n\n3. **SuperBase 설정**\n   - AI가 SuperBase를 사용할 수 있도록 설정하는 방법을 안내합니다.\n   - Custom MCP 설정 과정과 Access Token 생성 방법 설명.\n\n4. **데이터베이스 스키마 및 테이블 생성**\n   - 데이터베이스 스키마와 테이블의 개념을 설명하고, User 테이블 생성 과정을 안내합니다.\n   - Schema Visualizer를 통해 생성된 테이블을 확인하는 방법 소개.\n\n5. **Next.js와 SuperBase 통합**\n   - Next.js 프로젝트 내에서 SuperBase를 사용하는 방법을 설명합니다.\n   - 환경변수(.env) 파일 설정 및 API 키 관리 주의사항 안내.\n\n6. **인증 및 사용자 관리 기능 구현**\n   - 인증 컴포넌트를 생성하고, 회원가입 및 로그인 기능 구현 방법을 설명합니다.\n   - 로컬 스토리지에서 SuperBase로 데이터 저장 방법 안내.\n\n7. **할 일 목록 기능 구현**\n   - 할 일 목록의 추가 및 삭제 기능 구현 과정 설명.\n   - 사용자 경험 개선을 위한 UI 피드백 및 오류 처리 방법 안내.\n\n8. **랭킹 시스템 구현**\n   - 사용자 랭킹 시스템을 구현하는 방법을 설명합니다.\n   - 그룹 관리 기능과 점수 시스템 연동 방법 안내.\n\n9. **문제 해결 및 최종 점검**\n   - 구현 과정에서 발생한 오류를 해결하는 방법과 점검 사항을 안내합니다.\n   - 최종적으로 모든 기능이 정상적으로 작동하는지 확인하는 과정 설명.\n\n10. **결론 및 다음 단계**\n    - 프로젝트의 최종 결과를 요약하고, 향후 추가할 기능이나 개선 사항에 대한 논의.\n    - 시청자에게 추가 학습 자료나 관련 링크 제공."
  },
  {
    "index": 9,
    "video_id": "RnJkhxFMWDY",
    "title": "AI로 디자인 진짜 잘하는법",
    "url": "https://www.youtube.com/watch?v=RnJkhxFMWDY&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=9&pp=iAQB",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\RnJkhxFMWDY.txt",
    "subtitle_path_srt": "output_results\\subtitles\\RnJkhxFMWDY.srt",
    "summary": "이 비디오에서는 동일한 프롬프트로 생성된 전자기기 쇼핑몰 웹사이트의 두 가지 디자인을 비교하며, AI를 활용한 디자인에서 사람의 감성을 더할 수 있는 방법을 설명합니다. 첫 번째 디자인은 기계적인 느낌이 강한 반면, 두 번째 디자인은 고급스럽고 일체감이 있어 보입니다. 스크립트는 UI 디자인 과정에서 레퍼런스 찾기, 색상 조정, 재사용 가능한 컴포넌트 생성 등의 단계적 접근을 강조하며, AI를 이용해 효율적으로 작업하고, 최종적으로 원하는 결과물을 얻기 위한 반복적인 피드백 과정을 제안합니다. 또한, AI를 통해 만든 컴포넌트의 중앙화와 문서화를 통해 더 나은 디자인을 추구할 수 있음을 강조합니다.",
    "keywords": [
      "프롬트",
      "UI",
      "디자인",
      "컴포넌트",
      "크롤링",
      "재사용",
      "색감",
      "AI",
      "워크플로",
      "테마"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T13:00:04.594569",
    "table_of_contents": "#1. **프롬트 비교**\n   - 전자기기 쇼핑몰 사이트를 만들기 위한 두 가지 프롬트의 결과물 비교.\n   - 첫 번째와 두 번째 사이트의 디자인 차이와 선호도에 대한 논의.\n\n2. **AI를 활용한 디자인 방법**\n   - AI를 활용하여 사람의 감성을 담은 디자인을 만드는 방법.\n   - UI 디자인과 관련된 워크플로우의 중요성.\n\n3. **UI 설계 과정**\n   - UI 디자인 시 고려해야 할 요소들: 레퍼런스, 색감, 컴포넌트 생성.\n   - 피그마와 같은 도구를 사용하여 디자인 구성.\n\n4. **개발 단계**\n   - 디자인 컴포넌트를 재사용하여 개발하는 방법.\n   - 과거와 현재의 코딩 접근 방식 비교.\n\n5. **크롤링 및 데이터 추출**\n   - 웹사이트 크롤링을 통해 디자인 데이터 수집.\n   - 원하는 테마 데이터를 JSON 형태로 반환받는 과정.\n\n6. **컴포넌트 생성 요청**\n   - JSON 데이터를 기반으로 컴포넌트 페이지 생성 요청.\n   - 재사용 가능한 컴포넌트 제작을 위한 요청의 중요성.\n\n7. **디자인 최적화**\n   - AI를 활용하여 디자인 최적화 및 디버깅 과정.\n   - 추가 컴포넌트 요청 및 디버깅 방법.\n\n8. **결과 비교**\n   - AI를 활용한 디자인과 단순 요청으로 생성된 디자인의 차이 분석.\n   - 최종적으로 완성된 사이트의 일체감 및 디자인 품질 평가.\n\n9. **마무리 및 추가 요청**\n   - 반복적인 이터레이션을 통한 디자인 개선 과정.\n   - 클라우드와 커서 사용하여 컴포넌트 관리 및 요청 방법.\n\n10. **구독 및 후원 요청**\n    - 영상의 유익함에 대한 언급과 구독, 좋아요, 후원 요청."
  },
  {
    "index": 10,
    "video_id": "oGSZUCnKnJQ",
    "title": "10분 만에 AI로 홈페이지 디자인 복제하기 (feat. Open Lovable)",
    "url": "https://www.youtube.com/watch?v=oGSZUCnKnJQ&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=10&pp=iAQB",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\oGSZUCnKnJQ.txt",
    "subtitle_path_srt": "output_results\\subtitles\\oGSZUCnKnJQ.srt",
    "summary": "이 비디오에서는 오픈러버블이라는 오픈소스 도구를 소개하며, 이를 통해 기존 웹사이트 스타일을 참고하여 새로운 리액트 앱을 쉽게 만들 수 있는 방법을 설명합니다. 사용자는 웹사이트 주소를 입력하면 해당 사이트의 스타일을 유지하면서 자신만의 디자인으로 변환할 수 있으며, API 키를 설정하고 서버를 열어 시연하는 과정도 보여줍니다. 다만, 현재 서비스의 안정성과 API 사용에 따른 비용 문제에 대한 아쉬움도 언급되며, 향후 더 나은 발전이 필요하다는 의견을 덧붙입니다. 마지막으로, 사용자들의 피드백을 요청하고 구독과 좋아요를 독려합니다.",
    "keywords": [
      "오픈러버블",
      "AI",
      "디자인",
      "리액트",
      "API",
      "Gitclone",
      "FireCrawl",
      "프롬프트",
      "비용",
      "클로드 API"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T13:00:17.206885",
    "table_of_contents": "비디오 스크립트 목차:\n\n1. **소개**\n   - IT 커넥트의 인사 및 주제 소개. AI 디자인의 지루함과 새로운 서비스 '오픈러버블'의 등장 배경 설명.\n\n2. **오픈러버블 개요**\n   - 오픈러버블의 기능 및 목적 설명. 기존 웹사이트 스타일을 참고하여 새로운 리액트 앱을 생성하는 도구 소개. 애플 사이트 복제 예시.\n\n3. **시연 준비**\n   - 오픈러버블 시연을 위한 준비 단계 설명. Git 저장소 복제 및 의존성 설치 과정 안내.\n\n4. **API 키 받기**\n   - 오픈러버블 사용을 위한 API 키 확보 방법 설명. Eb.debue, FireCrawl, Anthropic Cloud API의 사인업 및 키 생성 과정 안내.\n\n5. **환경 설정**\n   - .emv.local 파일 생성 및 API 키 입력 방법 설명. Grog 및 ChatsPT 사용자의 키 입력 방식 안내.\n\n6. **서버 실행**\n   - npm 명령어를 통해 서버를 실행하는 과정 설명. 크롤링할 사이트 주소를 입력하여 결과 확인하기.\n\n7. **결과 분석**\n   - 크롤링 결과 및 코드 생성 과정 설명. 복제된 사이트와 비교 분석, 누락된 요소 및 오류 분석.\n\n8. **비용 문제 및 대안**\n   - 클라우드 API 사용 시 발생하는 비용 문제 언급. 무료 API 사용 가능성 및 로컬 실행 대안 제안.\n\n9. **결론 및 피드백 요청**\n   - 오픈러버블 사용 경험에 대한 피드백 요청. 구독 및 좋아요 유도, 다음 영상 예고.\n\n10. **마무리 인사**\n    - 영상 종료 및 감사 인사."
  },
  {
    "index": 11,
    "video_id": "8jvFpt7ToUY",
    "title": "제가 클로드 코드에 대해서 오해했습니다 (AI 워크플로우 튜토리얼)",
    "url": "https://www.youtube.com/watch?v=8jvFpt7ToUY&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=11&pp=iAQB",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\8jvFpt7ToUY.txt",
    "subtitle_path_srt": "output_results\\subtitles\\8jvFpt7ToUY.srt",
    "summary": "이 비디오 스크립트에서는 클로드 코드와 VS 코드에서의 사용 경험을 공유하며, 클로드 코드가 CLI 툴임에도 불구하고 VS 코드의 익스텐션으로 편리하게 사용할 수 있음을 설명합니다. 사용자는 클로드 코드의 기능과 성능을 다른 도구인 GitHub Copilot과 비교하며, 클로드 코드가 더 체계적이고 단계적으로 작업을 진행하는 성격을 가진다는 점을 강조합니다. 또한, 바이브 코딩을 통해 상상한 기능을 AI와의 상호작용을 통해 구현하는 과정에서의 중요성을 설명하며, 효과적인 AI 활용을 위해 구체적인 상상력과 알고리즘 기초 지식의 필요성을 강조합니다.",
    "keywords": [
      "클로드 코드",
      "VS 코드",
      "코파일럿",
      "에이전트",
      "바이브 코딩",
      "프롬프트",
      "디버깅",
      "알고리즘",
      "상상력",
      "터미널"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T13:00:35.887157",
    "table_of_contents": "#1. **클로드 코드에 대한 오해**\n   - 클로드 코드의 정의와 CLI 툴로서의 특성 설명.\n   - VS 코드와의 통합 사용에 대한 개인적인 경험 공유.\n\n2. **VS 코드에서 클로드 코드 사용하기**\n   - 엔트로픽의 CLOD CODE FOR VS 코드 익스텐션 설치 방법.\n   - 클로드 코드와 코파일럿의 유사성 및 편리성 설명.\n\n3. **코파일럿 vs. 커서 vs. 클로드 코드**\n   - 각 툴의 특징과 사용자 경험 비교.\n   - 커서의 장점과 기탑 코파일럿의 무료 제공 혜택 소개.\n\n4. **클로드 코드의 장점**\n   - 독립적인 소프트웨어로서의 자유로움.\n   - 여러 폴더 간의 참조 용이성 설명.\n\n5. **각 툴의 성격 차이**\n   - 커서와 코파일럿의 빠른 문제 해결 성향.\n   - 클로드 코드의 계획적이고 단계적인 문제 해결 방식.\n\n6. **클로드 코드의 요금제**\n   - 기본 플랜과 유료 플랜에 대한 설명.\n   - 개인적인 플랜 사용 경험 공유.\n\n7. **바이브 코딩 시연**\n   - 논문 읽기 앱의 하이라이트 기능 개선 튜토리얼.\n   - 프롬프트 작성 및 AI와의 상호작용 과정 설명.\n\n8. **AI와의 상호작용에서의 팁**\n   - 상황 파악 요청 및 명령 내리기 전 설명의 중요성.\n   - AI의 추천을 받고 활용하는 방법.\n\n9. **기능 추가 후 결과 및 피드백**\n   - 최종 결과물 테스트 및 피드백 과정 설명.\n   - 코드 정리 및 Git Commit 과정.\n\n10. **바이브 코딩의 중요성**\n    - 상상력의 중요성과 구현 과정에 대한 설명.\n    - 코딩 및 알고리즘 기초 지식의 필요성 강조.\n\n11. **결론 및 채널 구독 권장**\n    - 바이브 코딩의 도구로서의 가능성 재강조.\n    - 향후 유용한 영상 제공을 위한 채널 구독 권장."
  },
  {
    "index": 12,
    "video_id": "BX4T-jv8JQU",
    "title": "AI에게 기획서를 줬더니 앱 하나를 뚝딱? Flutter 앱 자동 개발",
    "url": "https://www.youtube.com/watch?v=BX4T-jv8JQU&list=PLI9HGNfZmkogMw-i-6o16ZAJX3m1gcpKT&index=12&pp=iAQB0gcJCfwJAYcqIYzv",
    "duration": "",
    "upload_date": "N/A",
    "processing_status": "completed",
    "subtitle_path_txt": "output_results\\subtitles\\BX4T-jv8JQU.txt",
    "subtitle_path_srt": "output_results\\subtitles\\BX4T-jv8JQU.srt",
    "summary": "이 비디오는 AI 코딩 연구소 바이브랩스가 플러터를 이용한 앱 개발의 기획과 코딩 과정에 대해 설명하는 내용을 담고 있습니다. 기획 단계에서는 사용자의 불편함을 해결하는 데 중점을 두고, 구체적이고 현실적인 문제 해결의 중요성을 강조합니다. 개발할 앱의 기본 아이디어는 Gmail에서 텍스트를 가져와 자동으로 이메일을 작성하는 기능으로, AI 모델인 Claude와 GPT를 비교하여 MVP 개발 방향성을 논의합니다. 또한, PRD, TRD, 유저 플로우 등 필요한 문서 작성을 통해 개발 요구사항을 정리하고, 클로드 코드와 커서 AI를 이용한 실제 코딩 과정을 안내합니다. API 키 설정과 보안 관리 방법, 에러 해결 요청에 대한 설명도 포함되어 있으며, 최종적으로 앱의 작동 여부를 테스트하고 중간 문제를 해결하는 과정을 보여줍니다. 이 모든 과정에서 클로드 코드의 우수성을 언급하며 프로젝트 기획과 프롬프트 디자인의 중요성을 강조하고, AI를 활용한 코딩의 가능성을 제시한 후 구독과 댓글 요청으로 영상을 마무리합니다.",
    "keywords": [
      "앱 개발",
      "기획",
      "Claude",
      "GPT",
      "프롬프트",
      "MVP",
      "사용자 문제",
      "아이디어",
      "브레인스토밍",
      "이메일 자동화"
    ],
    "error_message": null,
    "updated_at": "2025-10-09T13:01:13.111913",
    "table_of_contents": "#1. **소개**\n   - 바이브랩스와 AI 코딩 연구소의 목표 및 비전 소개\n   - 플러토를 사용한 앱 개발 예시 소개\n\n2. **앱 기획의 중요성**\n   - 앱 개발 전 기획의 필요성 강조\n   - 문제 해결을 위한 접근 방식 설명\n\n3. **아이디어 브레인스토밍**\n   - Claude와 GPT를 이용한 앱 기획 비교\n   - 프롬프트 설정 및 답변 분석\n\n4. **앱 기능 구체화**\n   - 메일 전송 앱의 기본 기능 제안\n   - 기능 단순화 및 MVP 접근 설명\n\n5. **비판적 검토와 아이디어 발전**\n   - AI의 답변에 대한 비판적 시각 필요성\n   - 거절 기능을 포함한 다양한 대안 제안\n\n6. **앱의 정체성 및 브랜딩**\n   - 앱의 핵심 가치 정의\n   - UX 아이디어 및 브랜딩 키워드 제안\n\n7. **기획서 작성 준비**\n   - 기획서 템플릿 설명\n   - 아이디어 검토 및 수정 필요성 강조\n\n8. **개발 문서 작성**\n   - PRD, TRD, 유저 플로우, 프롬프트 디자인 설명\n   - 각 문서의 역할 및 중요성 강조\n\n9. **코딩 시작**\n   - 개발 환경 설정 및 프로젝트 폴더 구성\n   - 클로드 코드와 커서 프로그램 사용 예시\n\n10. **최종 준비 및 실행**\n    - 문서 다운로드 및 코드 실행 준비\n    - 실제 개발 시작 및 진행 방향 안내\n\n이 목차는 비디오의 주요 주제를 체계적으로 나열하여 시청자가 내용을 쉽게 이해하고 따라갈 수 있도록 돕습니다."
  }
]
